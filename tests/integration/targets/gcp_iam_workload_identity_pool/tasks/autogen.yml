# Pre-test setup
- name: Delete a workload identity pool
  raphaeldegail.googlecloudy.gcp_iam_workload_identity_pool:
    name: '{{ pool_name }}'
    project_id: '{{ project_id }}'
    state: absent
    auth_kind: "{{ gcp_cred_kind }}"
    service_account_file: "{{ gcp_cred_file | default(omit) }}"
#----------------------------------------------------------
- name: Create a workload identity pool
  raphaeldegail.googlecloudy.gcp_iam_workload_identity_pool:
    name: '{{ pool_name }}'
    project_id: '{{ project_id }}'
    state: present
    auth_kind: "{{ gcp_cred_kind }}"
    service_account_file: "{{ gcp_cred_file | default(omit) }}"
  register: result
- name: Assert changed is true
  ansible.builtin.assert:
    that:
      - result.changed == true
      - "result.name is defined"
- name: Verify that the creation was successful
  raphaeldegail.googlecloudy.gcp_iam_workload_identity_pool_info:
    name: '{{ pool_name }}'
    project_id: '{{ project_id }}'
    auth_kind: "{{ gcp_cred_kind }}"
    service_account_file: "{{ gcp_cred_file | default(omit) }}"
  register: results
- name: Verify that command succeeded
  ansible.builtin.assert:
    that:
      - "results['name'] is defined"
#-----------------------------------------------------------------------------
- name: Create an already existing workload identity pool
  raphaeldegail.googlecloudy.gcp_iam_workload_identity_pool:
    name: '{{ pool_name }}'
    project_id: '{{ project_id }}'
    state: present
    auth_kind: "{{ gcp_cred_kind }}"
    service_account_file: "{{ gcp_cred_file | default(omit) }}"
  register: result
- name: Assert changed is false
  ansible.builtin.assert:
    that:
      - result.changed == false
      - "result.name is defined"
# ----------------------------------------------------------------------------
- name: Update the pool
  raphaeldegail.googlecloudy.gcp_iam_workload_identity_pool:
    name: '{{ pool_name }}'
    display_name: 'Demo Pool'
    description: 'This is a demo pool'
    project_id: '{{ project_id }}'
    state: present
    auth_kind: "{{ gcp_cred_kind }}"
    service_account_file: "{{ gcp_cred_file | default(omit) }}"
  register: result
- name: Assert changed is true
  ansible.builtin.assert:
    that:
      - result.changed == true
      - "result.name is defined"
      - result.displayName == 'Demo Pool'
      - result.description == 'This is a demo pool'
# ----------------------------------------------------------------------------
- name: Check pool was updated
  raphaeldegail.googlecloudy.gcp_iam_workload_identity_pool_info:
    name: '{{ pool_name }}'
    project_id: '{{ project_id }}'
    auth_kind: "{{ gcp_cred_kind }}"
    service_account_file: "{{ gcp_cred_file | default(omit) }}"
  register: results
- name: Verify that update succeeded
  ansible.builtin.assert:
    that:
      - "results['name'] is defined"
# ----------------------------------------------------------------------------
- name: Delete the pool
  raphaeldegail.googlecloudy.gcp_iam_workload_identity_pool:
    name: '{{ pool_name }}'
    project_id: '{{ project_id }}'
    state: absent
    auth_kind: "{{ gcp_cred_kind }}"
    service_account_file: "{{ gcp_cred_file | default(omit) }}"
  register: result
- name: Assert changed is true
  ansible.builtin.assert:
    that:
      - result.changed == true
      - "result.name is undefined"
# ----------------------------------------------------------------------------
- name: Check the pool is absent
  raphaeldegail.googlecloudy.gcp_iam_workload_identity_pool_info:
    name: '{{ pool_name }}'
    project_id: '{{ project_id }}'
    auth_kind: "{{ gcp_cred_kind }}"
    service_account_file: "{{ gcp_cred_file | default(omit) }}"
  register: results
- name: Verify that deletion succeeded
  ansible.builtin.assert:
    that:
      - results.state == 'DELETED'
# ----------------------------------------------------------------------------
- name: Delete an inexistant pool
  raphaeldegail.googlecloudy.gcp_iam_workload_identity_pool:
    name: '{{ pool_name }}'
    project_id: '{{ project_id }}'
    state: absent
    auth_kind: "{{ gcp_cred_kind }}"
    service_account_file: "{{ gcp_cred_file | default(omit) }}"
  register: result
- name: Assert changed is false
  ansible.builtin.assert:
    that:
      - result.changed == false
      - "result.name is undefined"
