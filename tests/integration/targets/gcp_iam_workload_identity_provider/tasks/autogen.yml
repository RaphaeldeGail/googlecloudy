# Pre-test setup
- name: Delete any provider
  raphaeldegail.googlecloudy.gcp_iam_workload_identity_provider:
    name: '{{ provider_name }}'
    oidc:
      issuer_uri: 'https://some-url.demo'
    attribute_mapping:
      google.subject: assertion.sub
    pool_name: '{{ pool_name }}'
    state: absent
    auth_kind: "{{ gcp_cred_kind }}"
    service_account_file: "{{ gcp_cred_file | default(omit) }}"
#----------------------------------------------------------
- name: Create an identity provider
  raphaeldegail.googlecloudy.gcp_iam_workload_identity_provider:
    name: '{{ provider_name }}'
    oidc:
      issuer_uri: 'https://some-url.demo'
    attribute_mapping:
      google.subject: assertion.sub
    pool_name: '{{ pool_name }}'
    state: present
    auth_kind: "{{ gcp_cred_kind }}"
    service_account_file: "{{ gcp_cred_file | default(omit) }}"
  register: result
- name: Assert changed is true
  ansible.builtin.assert:
    that:
      - result.changed == true
      - result.oidc.issuerUri == 'https://some-url.demo'
- name: Verify that the provider was created
  raphaeldegail.googlecloudy.gcp_iam_workload_identity_provider_info:
    name: '{{ provider_name }}'
    pool_name: '{{ pool_name }}'
    auth_kind: "{{ gcp_cred_kind }}"
    service_account_file: "{{ gcp_cred_file | default(omit) }}"
  register: results
- name: Verify that command succeeded
  ansible.builtin.assert:
    that:
      - "results['name'] is defined"
      - results.oidc.issuerUri == 'https://some-url.demo'
#-----------------------------------------------------------------------------
- name: Create an already existing provider
  raphaeldegail.googlecloudy.gcp_iam_workload_identity_provider:
    name: '{{ provider_name }}'
    oidc:
      issuer_uri: 'https://some-url.demo'
    attribute_mapping:
      google.subject: assertion.sub
    pool_name: '{{ pool_name }}'
    state: present
    auth_kind: "{{ gcp_cred_kind }}"
    service_account_file: "{{ gcp_cred_file | default(omit) }}"
  register: result
- name: Assert changed is false
  ansible.builtin.assert:
    that:
      - result.changed == false
      - result.oidc.issuerUri == 'https://some-url.demo'
# ----------------------------------------------------------------------------
- name: Update the provider
  raphaeldegail.googlecloudy.gcp_iam_workload_identity_provider:
    name: '{{ provider_name }}'
    display_name: 'Demo Provider'
    oidc:
      issuer_uri: 'https://some-url.demomo'
    attribute_mapping:
      google.subject: assertion.sub
    pool_name: '{{ pool_name }}'
    state: present
    auth_kind: "{{ gcp_cred_kind }}"
    service_account_file: "{{ gcp_cred_file | default(omit) }}"
  register: result
- name: Assert changed is true
  ansible.builtin.assert:
    that:
      - result.changed == true
      - result.oidc.issuerUri == 'https://some-url.demomo'
# ----------------------------------------------------------------------------
- name: Check provider was updated
  raphaeldegail.googlecloudy.gcp_iam_workload_identity_provider_info:
    name: '{{ provider_name }}'
    pool_name: '{{ pool_name }}'
    auth_kind: "{{ gcp_cred_kind }}"
    service_account_file: "{{ gcp_cred_file | default(omit) }}"
  register: results
- name: Verify that update succeeded
  ansible.builtin.assert:
    that:
      - "results['name'] is defined"
      - results.oidc.issuerUri == 'https://some-url.demomo'
      - results['displayName'] == 'Demo Provider'
# ----------------------------------------------------------------------------
- name: Delete the provider
  raphaeldegail.googlecloudy.gcp_iam_workload_identity_provider:
    name: '{{ provider_name }}'
    oidc:
      issuer_uri: 'https://some-url.demo'
    attribute_mapping:
      google.subject: assertion.sub
    pool_name: '{{ pool_name }}'
    state: absent
    auth_kind: "{{ gcp_cred_kind }}"
    service_account_file: "{{ gcp_cred_file | default(omit) }}"
  register: result
- name: Assert changed is true
  ansible.builtin.assert:
    that:
      - result.changed == true
# ----------------------------------------------------------------------------
- name: Check the provider is absent
  raphaeldegail.googlecloudy.gcp_iam_workload_identity_provider_info:
    name: '{{ provider_name }}'
    pool_name: '{{ pool_name }}'
    auth_kind: "{{ gcp_cred_kind }}"
    service_account_file: "{{ gcp_cred_file | default(omit) }}"
  register: results
- name: Verify that deletion succeeded
  ansible.builtin.assert:
    that:
      - results.state == 'DELETED'
# ----------------------------------------------------------------------------
- name: Delete an inexistant provider
  raphaeldegail.googlecloudy.gcp_iam_workload_identity_provider:
    name: '{{ provider_name }}'
    oidc:
      issuer_uri: 'https://some-url.demo'
    attribute_mapping:
      google.subject: assertion.sub
    pool_name: '{{ pool_name }}'
    state: absent
    auth_kind: "{{ gcp_cred_kind }}"
    service_account_file: "{{ gcp_cred_file | default(omit) }}"
  register: result
- name: Assert changed is false
  ansible.builtin.assert:
    that:
      - result.changed == false
