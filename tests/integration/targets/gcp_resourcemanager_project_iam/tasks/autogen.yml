# Pre-test setup
- name: Remove any IAM policy for the project
  raphaeldegail.googlecloudy.gcp_resourcemanager_project_iam:
    bindings: []
    policy_version: '1'
    project_id: '{{ project_id }}'
    auth_kind: "{{ gcp_cred_kind }}"
    service_account_file: "{{ gcp_cred_file | default(omit) }}"
#----------------------------------------------------------
- name: Set IAM policy for the project
  raphaeldegail.googlecloudy.gcp_resourcemanager_project_iam:
    bindings:
      - role: roles/editor
        members:
        - 'user:{{ demo_user }}'
        - 'serviceAccount:{{ demo_account }}'
    policy_version: '1'
    project_id: '{{ project_id }}'
    auth_kind: "{{ gcp_cred_kind }}"
    service_account_file: "{{ gcp_cred_file | default(omit) }}"
  register: result
- name: Assert changed is true
  ansible.builtin.assert:
    that:
      - result.changed == true
      - (result.bindings | length) > 0
- name: Verify that the binding was succesful
  raphaeldegail.googlecloudy.gcp_resourcemanager_project_iam_info:
    project_id: '{{ project_id }}'
    auth_kind: "{{ gcp_cred_kind }}"
    service_account_file: "{{ gcp_cred_file | default(omit) }}"
  register: results
- name: Verify that command succeeded
  ansible.builtin.assert:
    that:
      - results['bindings'] | length == 1
      - results['bindings'][0]['role'] == 'roles/editor'
#-----------------------------------------------------------------------------
- name: Set again the same IAM policy for billing account
  raphaeldegail.googlecloudy.gcp_resourcemanager_project_iam:
    bindings:
      - role: roles/editor
        members:
        - 'user:{{ demo_user }}'
        - 'serviceAccount:{{ demo_account }}'
    policy_version: '1'
    project_id: '{{ project_id }}'
    auth_kind: "{{ gcp_cred_kind }}"
    service_account_file: "{{ gcp_cred_file | default(omit) }}"
  register: result
- name: Assert changed is false
  ansible.builtin.assert:
    that:
      - result.changed == false
      - (result.bindings | length) > 0
# ----------------------------------------------------------------------------
- name: Update the policy
  raphaeldegail.googlecloudy.gcp_resourcemanager_project_iam:
    bindings:
      - role: roles/editor
        members:
        - 'user:{{ demo_user }}'
      - role: roles/owner
        members:
        - 'serviceAccount:{{ demo_account }}'
    policy_version: '1'
    project_id: '{{ project_id }}'
    auth_kind: "{{ gcp_cred_kind }}"
    service_account_file: "{{ gcp_cred_file | default(omit) }}"
  register: result
- name: Assert changed is true
  ansible.builtin.assert:
    that:
      - result.changed == true
      - (result.bindings | length) > 0
# ----------------------------------------------------------------------------
- name: Check policy was updated
  raphaeldegail.googlecloudy.gcp_resourcemanager_project_iam_info:
    project_id: '{{ project_id }}'
    auth_kind: "{{ gcp_cred_kind }}"
    service_account_file: "{{ gcp_cred_file | default(omit) }}"
  register: results
- name: Verify that update succeeded
  ansible.builtin.assert:
    that:
      - results['bindings'] | length == 2
      - results.bindings | intersect(binding) == binding
  vars:
    binding: [{'role': 'roles/editor', 'members': ['user:{{ demo_user }}']}]
# ----------------------------------------------------------------------------
- name: Delete the policy after tests
  raphaeldegail.googlecloudy.gcp_resourcemanager_project_iam:
    bindings: []
    policy_version: '1'
    project_id: '{{ project_id }}'
    auth_kind: "{{ gcp_cred_kind }}"
    service_account_file: "{{ gcp_cred_file | default(omit) }}"
