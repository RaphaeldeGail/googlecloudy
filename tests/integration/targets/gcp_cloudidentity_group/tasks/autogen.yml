# Pre-test setup
- name: Delete a Google group
  raphaeldegail.googlecloudy.gcp_cloudidentity_group:
    group_key:
      id: '{{ demo_group }}'
    parent: 'customers/{{ customer_directory_id }}'
    labels:
      cloudidentity.googleapis.com/groups.discussion_forum: ''
    state: absent
    auth_kind: "{{ gcp_cred_kind }}"
    service_account_file: "{{ gcp_cred_file | default(omit) }}"
#----------------------------------------------------------
- name: Create a Google group
  raphaeldegail.googlecloudy.gcp_cloudidentity_group:
    group_key:
      id: '{{ demo_group }}'
    parent: 'customers/{{ customer_directory_id }}'
    labels:
      cloudidentity.googleapis.com/groups.discussion_forum: ''
    state: present
    auth_kind: "{{ gcp_cred_kind }}"
    service_account_file: "{{ gcp_cred_file | default(omit) }}"
  register: result
- name: Assert changed is true
  ansible.builtin.assert:
    that:
      - result.changed == true
      - result.groupKey.id == '{{ demo_group }}'
- name: Verify that the binding was succesful
  raphaeldegail.googlecloudy.gcp_cloudidentity_group_info:
    name: '{{ result.name }}'
    auth_kind: "{{ gcp_cred_kind }}"
    service_account_file: "{{ gcp_cred_file | default(omit) }}"
  register: results
- name: Verify that command succeeded
  ansible.builtin.assert:
    that:
      - "results['name'] is defined"
      - results['groupKey']['id'] == '{{ demo_group }}'
#-----------------------------------------------------------------------------
- name: Create an already existing Google group
  raphaeldegail.googlecloudy.gcp_cloudidentity_group:
    group_key:
      id: '{{ demo_group }}'
    parent: 'customers/{{ customer_directory_id }}'
    labels:
      cloudidentity.googleapis.com/groups.discussion_forum: ''
    state: present
    auth_kind: "{{ gcp_cred_kind }}"
    service_account_file: "{{ gcp_cred_file | default(omit) }}"
  register: result
- name: Assert changed is false
  ansible.builtin.assert:
    that:
      - result.changed == false
      - result.groupKey.id == '{{ demo_group }}'
# ----------------------------------------------------------------------------
- name: Update the group
  raphaeldegail.googlecloudy.gcp_cloudidentity_group:
    display_name: 'Demo Group'
    group_key:
      id: '{{ demo_group }}'
    parent: 'customers/{{ customer_directory_id }}'
    labels:
      cloudidentity.googleapis.com/groups.discussion_forum: ''
    auth_kind: "{{ gcp_cred_kind }}"
    service_account_file: "{{ gcp_cred_file | default(omit) }}"
  register: result
- name: Assert changed is true
  ansible.builtin.assert:
    that:
      - result.changed == true
      - result.displayName == 'Demo Group'
# ----------------------------------------------------------------------------
- name: Check policy was updated
  raphaeldegail.googlecloudy.gcp_cloudidentity_group_info:
    name: '{{ result.name }}'
    auth_kind: "{{ gcp_cred_kind }}"
    service_account_file: "{{ gcp_cred_file | default(omit) }}"
  register: results
- name: Verify that update succeeded
  ansible.builtin.assert:
    that:
      - "results['name'] is defined"
      - results['groupKey']['id'] == '{{ demo_group }}'
      - results['displayName'] == 'Demo Group'
# ----------------------------------------------------------------------------
- name: Delete the group
  raphaeldegail.googlecloudy.gcp_cloudidentity_group:
    group_key:
      id: '{{ demo_group }}'
    parent: 'customers/{{ customer_directory_id }}'
    labels:
      cloudidentity.googleapis.com/groups.discussion_forum: ''
    state: absent
    auth_kind: "{{ gcp_cred_kind }}"
    service_account_file: "{{ gcp_cred_file | default(omit) }}"
  register: result
- name: Assert changed is true
  ansible.builtin.assert:
    that:
      - result.changed == true
      - "result.groupKey is undefined"
# ----------------------------------------------------------------------------
- name: Check the group is absent
  raphaeldegail.googlecloudy.gcp_cloudidentity_group_info:
    group_key:
      id: '{{ demo_group }}'
    parent: 'customers/{{ customer_directory_id }}'
    auth_kind: "{{ gcp_cred_kind }}"
    service_account_file: "{{ gcp_cred_file | default(omit) }}"
  register: results
- name: Verify that deletion succeeded
  ansible.builtin.assert:
    that:
      - "results.name is undefined"
# ----------------------------------------------------------------------------
- name: Delete an inexistant group
  raphaeldegail.googlecloudy.gcp_cloudidentity_group:
    group_key:
      id: '{{ demo_group }}'
    parent: 'customers/{{ customer_directory_id }}'
    labels:
      cloudidentity.googleapis.com/groups.discussion_forum: ''
    state: absent
    auth_kind: "{{ gcp_cred_kind }}"
    service_account_file: "{{ gcp_cred_file | default(omit) }}"
  register: result
- name: Assert changed is false
  ansible.builtin.assert:
    that:
      - result.changed == false
      - "result.groupKey is undefined"
