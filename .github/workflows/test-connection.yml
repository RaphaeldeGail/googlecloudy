---
name: test.connection
on:
  push:
env:
  PYTHON_VERSION: '3.11'
jobs:
  gcp:
    runs-on: ubuntu-latest
    # Environment where integration variables are stored
    environment: develop
    # Add "id-token" with the intended permissions.
    permissions:
      contents: 'read'
      id-token: 'write'
    defaults:
      run:
        working-directory: ansible_collections/raphaeldegail/googlecloudy
    steps:
      - name: check out code
        uses: actions/checkout@v4
        with:
          path: ansible_collections/raphaeldegail/googlecloudy
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: ${{ env.PYTHON_VERSION }}
      - name: Install dependencies
        run: pip install -r requirements.txt
      - name: Install ansible and tests
        run: pip install -r requirements-test.txt
      - name: Install ansible collections
        run: ansible-galaxy collection install -r requirements-test.yml -p ${{ github.workspace }}
      - id: auth
        name: Authenticate to Google Cloud
        uses: 'google-github-actions/auth@v2'
        with:
          token_format: 'access_token'
          workload_identity_provider: ${{ secrets.CI_WORKLOAD_PROVIDER }}
          service_account: ${{ secrets.CI_SERVICE_ACCOUNT }}
      - name: Write integration-test configuration files
        env:
          CI_GCP_BILLING_ACCOUNT: ${{ secrets.CI_GCP_BILLING_ACCOUNT }}
          CI_DEMO_USER: ${{ secrets.CI_DEMO_USER }}
          CI_DEMO_ACCOUNT: ${{ secrets.CI_DEMO_ACCOUNT }}
          CI_DEMO_GROUP: ${{ secrets.CI_DEMO_GROUP }}
          CI_ORG_ID: ${{ secrets.CI_ORG_ID }}
          CI_CUSTOMER_DIRECTORY: ${{ secrets.CI_CUSTOMER_DIRECTORY }}
          CI_PROJECT_ID: ${{ secrets.CI_PROJECT_ID }}
          CI_FOLDER_ID: ${{ secrets.CI_FOLDER_ID }}
        run: |
          echo "---
          gcp_billing_account_id: $CI_GCP_BILLING_ACCOUNT
          demo_user: $CI_DEMO_USER
          demo_account: $CI_DEMO_ACCOUNT
          demo_group: $CI_DEMO_GROUP
          org_id: $CI_ORG_ID
          customer_directory_id: $CI_CUSTOMER_DIRECTORY
          folder_id: $CI_FOLDER_ID
          project_id: $CI_PROJECT_ID
          gcp_cred_kind: accesstoken
          access_token: ${{ steps.auth.outputs.access_token }}
          " > tests/integration/integration_config.yml
      # run tests
      - name: Run integration tests
        run: ansible-test integration -v --color --python ${{ env.PYTHON_VERSION }} --start-at gcp_iam_organization_role
